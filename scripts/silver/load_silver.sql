CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN
INSERT INTO silver.crm_cust_info (cst_id,cst_key,cst_firstname,cst_lastname,cst_maritalstatus,cst_gndr,cst_createdate)
SELECT 
    CST_ID,
    CST_KEY,
    TRIM(CST_FIRSTNAME) AS CST_FIRSTNAME,
    TRIM(CST_LASTNAME) AS CST_LASTNAME,
    CASE
       WHEN CST_MARITALSTATUS='M' THEN 'MARRIED'
       WHEN CST_MARITALSTATUS='S' THEN 'SINGLE'
       ELSE 'N/A'
    END AS CST_MARITALSTATUS,
    CASE 
        WHEN CST_GNDR = 'M' THEN 'MALE' 
        WHEN CST_GNDR = 'F' THEN 'FEMALE' 
        ELSE 'N/A'
    END AS CST_GNDR,
    CST_CREATEDATE
FROM (
    SELECT * ,ROW_NUMBER() OVER(PARTITION BY CST_ID ORDER BY CST_CREATEDATE DESC) AS FLAG_LAST FROM BRONZE.CRM_CUST_INFO WHERE CST_ID IS NOT NULL
) AS subquery;




INSERT INTO silver.crm_prd_info (PRD_ID,CAT_ID,PRD_KEY,PRD_NM,PRD_COST,PRD_LINE,PRD_START_DT,PRD_END_DT)
SELECT 
PRD_ID,
REPLACE(SUBSTRING(PRD_KEY,1,5),'-','_') AS CAT_ID,
SUBSTRING(PRD_KEY,7,LEN(PRD_KEY)) AS PRD_KEY,
TRIM(PRD_NM),
CASE 
WHEN PRD_COST IS NULL THEN 0
ELSE PRD_COST
END AS PRD_COST
,
CASE
WHEN PRD_LINE='M' THEN 'MOUNTAIN'
WHEN PRD_LINE='R' THEN 'ROAD'
WHEN PRD_LINE='S' THEN 'OTHER SALES'
WHEN PRD_LINE='T' THEN 'TOURING'
ELSE 'N/A'
END AS PRD_LINE,

CAST(PRD_START_DT AS DATE) AS PRD_START_DT,
CAST(LEAD(PRD_START_DT) OVER(PARTITION BY PRD_KEY ORDER BY PRD_START_DT)-1 AS DATE) AS PRD_END_DT
FROM BRONZE.CRM_PRD_INFO
 



INSERT INTO silver.crm_sales_details
SELECT 
    SLS_ORD_NUM,
    SLS_PRD_KEY,
    SLS_CUST_ID,
    CASE 
        WHEN SLS_ORDER_DT = 0 OR LEN(CAST(SLS_ORDER_DT AS VARCHAR)) > 8 THEN NULL
        ELSE TRY_CAST(CAST(SLS_ORDER_DT AS VARCHAR) AS DATE)
    END AS SLS_ORDER_DT,
    CASE 
        WHEN SLS_SHIP_DT = 0 OR LEN(CAST(SLS_SHIP_DT AS VARCHAR)) > 8 THEN NULL
        ELSE TRY_CAST(CAST(SLS_SHIP_DT AS VARCHAR) AS DATE)
    END AS SLS_SHIP_DT,
    CASE 
        WHEN SLS_DUE_DT = 0 OR LEN(CAST(SLS_DUE_DT AS VARCHAR)) > 8 THEN NULL
        ELSE TRY_CAST(CAST(SLS_DUE_DT AS VARCHAR) AS DATE)
    END AS SLS_DUE_DT,
    SLS_QUANTITY * SLS_PRICE AS SLS_SALES,
    SLS_QUANTITY,
    SLS_PRICE
FROM bronze.crm_sales_details;




INSERT INTO silver.erp_cust 
 SELECT 
 CASE 
 WHEN CID LIKE 'NAS%' THEN SUBSTRING(CID,4,LEN(CID))
 ELSE CID
 END AS CID,
 BDATE,
 CASE
 WHEN GEN='M' THEN 'Male'
 when GEN='F' THEN 'Female'
 WHEN GEN='Male' THEN 'Male'
 WHEN GEN='Female' THEN 'Female'
 ELSE 'N/A'
 END AS GEN
 FROM BRONZE.ERP_CUST


 INSERT INTO silver.erp_loc
 SELECT 
 REPLACE(CID,'-','') AS CID,
 CASE
 WHEN CNTRY IN ('US','USA') THEN 'United States'
 WHEN CNTRY='DE' THEN 'Germany'
 WHEN CNTRY='' OR CNTRY IS NULL THEN 'N/A'
 ELSE CNTRY
 END AS CNTRY
 FROM bronze.erp_loc

 INSERT INTO silver.erp_px_cat
 SELECT 
 ID,
 CAT,
 SUBCAT,
 MAINTENANCE
 FROM bronze.erp_px_cat
END
